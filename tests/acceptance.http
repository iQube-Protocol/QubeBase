### QubeBase Core Hub - Acceptance Tests
### Replace {{SERVICE_ROLE_KEY}} with your actual service role key
### Replace UUIDs with actual values from your seeded data

@baseUrl = http://127.0.0.1:54321/functions/v1
@serviceKey = {{SERVICE_ROLE_KEY}}

### Test 1: Upload intake (register metadata)
POST {{baseUrl}}/upload_intake
content-type: application/json
authorization: Bearer {{serviceKey}}

{
  "instance_id": "{{some_instance_uuid}}",
  "tenant_id": "{{platform_tenant_uuid}}",
  "site_id": "{{kn0w1_site_uuid}}",
  "class_": "sensitive",
  "size_bytes": 1048576,
  "mime": "image/jpeg",
  "storage_uri": "blakqube/{{uuid}}/photo.jpg",
  "envelope": {
    "key_ref": "keyref-demo",
    "wrapped_dek": "aGV4LWJ5dGVzLWhlcmU=",
    "alg": "AES-256-GCM",
    "version": 1
  }
}

### Test 2: Issue signed URL (should pass if RLS grants allow)
POST {{baseUrl}}/issue_signed_url
content-type: application/json
authorization: Bearer {{serviceKey}}

{
  "payload_id": "{{payload_uuid}}",
  "country": "US"
}

### Test 3: Generate derivatives
POST {{baseUrl}}/generate_derivatives
content-type: application/json
authorization: Bearer {{serviceKey}}

{
  "payload_id": "{{payload_uuid}}"
}

### Test 4: Registry webhook - template upsert
POST {{baseUrl}}/registry_webhook
content-type: application/json
authorization: Bearer {{serviceKey}}

{
  "type": "template.upsert",
  "template": {
    "id": "{{template_uuid}}",
    "name": "TestTemplate.v1",
    "meta_public": {"schema": "test"}
  }
}

### Test 5: Registry webhook - instance upsert
POST {{baseUrl}}/registry_webhook
content-type: application/json
authorization: Bearer {{serviceKey}}

{
  "type": "instance.upsert",
  "instance": {
    "id": "{{instance_uuid}}",
    "template_id": "{{template_uuid}}",
    "owner_tenant_id": "{{platform_tenant_uuid}}",
    "meta_public": {"title": "Test Instance"},
    "black_pointer": "cid://test",
    "tokenqube_key_id": "keyref-test"
  }
}

### Test 6: IPFS/ICP connector (Phase 2 stub)
POST {{baseUrl}}/ipfs_icp_connector
content-type: application/json
authorization: Bearer {{serviceKey}}

{
  "payload_id": "{{payload_uuid}}",
  "tier": "ipfs_private",
  "uri": "ipfs://Qm...",
  "latency_ms": 150
}

### Test 7: Analytics refresh
POST {{baseUrl}}/analytics_refresh
content-type: application/json
authorization: Bearer {{serviceKey}}

{}

### Expected Results:
# Test 1: Should return 201 with payload_id and note (OK or SOFT_CAP_EXCEEDED)
# Test 2: Should return 200 with signed_url (or 403 if no grant)
# Test 3: Should return 200 with ok: true
# Test 4: Should return 200 with ok: true
# Test 5: Should return 200 with ok: true
# Test 6: Should return 200 with echoed data
# Test 7: Should return 200 with note about adding RPC
